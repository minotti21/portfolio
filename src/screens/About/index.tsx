"use client";

import SectionContainer from "@/components/Section";
import {
  AboutContainer,
  ExperienceText,
  IconsContainer,
  StyledImage,
  StyledMiddleText,
  StyledSkillsText,
  StyledTechnologyImage,
  StyledText,
  StyledTitle,
  Technologies,
  TechnologyInfoContainer,
  TechnologyInfoSpan,
  TechnologyInfoText,
  TechnologyInfoTitle,
  TextAndImageContainer,
  TextContainer,
} from "./styles";
import Image from "next/image";
import { useState } from "react";

export default function About() {
  const [currentSkill, setCurrentSkill] = useState("");
  const tecnologyInfo = "Passe o mouse sobre as tecnologias acima üëÜ";

  let technologyText = <TechnologyInfoSpan>{tecnologyInfo}</TechnologyInfoSpan>;

  switch (currentSkill) {
    case "html": {
      technologyText = (
        <>
          <TechnologyInfoTitle>HTML</TechnologyInfoTitle>
          <TechnologyInfoText>
            A primeira linguagem da tr√≠ade front-end, por√©m, n√£o se trata de
            uma linguagem de programa√ß√£o e sim de marca√ß√£o, cont√©m toda a
            sem√¢ntica de um site e pode se dizer que √© tamb√©m seu esqueleto.
          </TechnologyInfoText>
          <TechnologyInfoText>
            HTML significa HyperText Markup Language (Linguagem de Marca√ß√£o de
            Hipertexto em portgu√™s) e foi criado em uma organiza√ß√£o europeia de
            pesquisa nuclear para facilitar o compartilhamento de documentos
            feitos no computador.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos e 5 meses</ExperienceText>
        </>
      );

      break;
    }
    case "css": {
      technologyText = (
        <>
          <TechnologyInfoTitle>CSS</TechnologyInfoTitle>
          <TechnologyInfoText>
            A segunda linguagem da tr√≠ade do front-end, esse aqui √© uma
            linguagem de estilo, com ela podemos dar cor ao nosso HTML e tamb√©m
            posicionar elementos de forma mais simples.
          </TechnologyInfoText>
          <TechnologyInfoText>
            CSS significa Cascading Style Sheets (Folha de Estilo em Cascatas em
            portugu√™s) e permitiu que os desenvolvedores separassem o arquivos
            de estilo e texto, trazendo maior escalabilidade para os projetos.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos e 5 meses</ExperienceText>
        </>
      );

      break;
    }
    case "sass": {
      technologyText = (
        <>
          <TechnologyInfoTitle>SASS</TechnologyInfoTitle>
          <TechnologyInfoText>
            Um pr√©-processador para o CSS, nos fornece uma sintaxe mais
            simplificada, permitindo escrever o mesmo c√≥digo com menos linhas fornecendo recursos muito √∫teis e inovadores.
          </TechnologyInfoText>
          <TechnologyInfoText>
            SASS significa Syntactically Awesome Stylesheets (Folhas de Estilo
            Incrivelmente Sint√°ticas em portugu√™s), como o navegador fornece
            suporte ao SASS, ele √© transpilado para o CSS no momento que o
            projeto √© buildado.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos</ExperienceText>
        </>
      );

      break;
    }
    case "tailwind": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Tailwind</TechnologyInfoTitle>
          <TechnologyInfoText>
            Um framework que utiliza o conceito de Atomic CSS, tem uma grande
            lista de classes pr√© definidas que s√£o uma abrevia√ß√£o das
            propriedades do CSS, podendo ser reutilizadas.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Diferente de grande parte dos frameworks, √© altamente flex√≠vel,
            podendo ser personalizado do seu jeito. Na hora de buildar o projeto
            para produ√ß√£o, remove todas as classes n√£o utilizadas, reduzindo o
            tamanho do arquivo final.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 10 meses</ExperienceText>
        </>
      );

      break;
    }
    case "styled": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Styled Components</TechnologyInfoTitle>
          <TechnologyInfoText>
            Uma tecnologia que nos permite estilizar a n√≠vel de componente,
            traz grande flexibilidade e facilidade na hora da implementa√ß√£o e
            manuten√ß√£o do c√≥digo (esse portf√≥lio est√° sendo codado com ele üòÖ)
          </TechnologyInfoText>
          <TechnologyInfoText>
            Foi criado com foco no React, com a inten√ß√£o de inovar e solucionar
            algumas limita√ß√µes que eram comuns na hora de estilizar um
            componente, √© bem √∫til em projetos que necessitam de l√≥gica nos estilos.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano e 6 meses</ExperienceText>
        </>
      );

      break;
    }
    case "javascript": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Javascript</TechnologyInfoTitle>
          <TechnologyInfoText>
            A terceira e √∫ltima linguagem da tr√≠ade do front-end, uma linguagem
            de programa√ß√£o interpretada que trouxe grande dinamismo para os
            sites e foi crescendo exponencialmente com o passar do tempo.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Foi desenvolvida em apenas 10 dias, levou "Java" em seu nome para
            surfar no hype da √©poca, pode ser utilizada para desenvolver sites, APIs, aplicativos m√≥veis, aplica√ß√µes desktop, machine
            learning, internet das coisas, etc.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos e 4 meses</ExperienceText>
        </>
      );

      break;
    }
    case "typescript": {
      technologyText = (
        <>
          <TechnologyInfoTitle>TypeScript</TechnologyInfoTitle>
          <TechnologyInfoText>
            Foi desenvolvido pela Microsoft com o intuito de solucionar todos os problemas que o JavaScript puro tem, o maior deles, claro: sua tipagem fraca. √â essencial para detectar erros durante o desenvolvimento e escalar projetos.
          </TechnologyInfoText>
          <TechnologyInfoText>
            O framework Angular (desenvolvido pela Google) utiliza o TypeScript por padr√£o. Traz tamb√©m alguns recursos para orienta√ß√£o a objeto, √≥timo para manter o c√≥digo organizado sem a utiliza√ß√£o de frameworks.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano e 6 meses</ExperienceText>
        </>
      );

      break;
    }
    case "react": {
      technologyText = (
        <>
          <TechnologyInfoTitle>React</TechnologyInfoTitle>
          <TechnologyInfoText>
            A biblioteca queridinha dos programadores front-end, segue a
            categoria de SPA (Single Page Application), √© orientada a
            componentes e foi desenvolvida pelo time do Facebook para gerenciar melhor o estado e o reaproveitamento de c√≥digo da aplica√ß√£o.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Al√©m de todos benef√≠cios, h√° tamb√©m o React Native para desenvolvimento de aplicativos m√≥veis, trabalho utilizando ele e particularmente, sou um grande estusiasta das duas tecnologias.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos</ExperienceText>
        </>
      );

      break;
    }
    case "redux": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Redux</TechnologyInfoTitle>
          <TechnologyInfoText>
            Biblioteca feita para gerenciamento de estados complexos no React (pois os recusors oferecidos n√£o eram suficientes para grandes projetos) e acabou ganhando grande popularidade entre os desenvolvedores.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Torna o gerenciamento de estado global mais robusto e previs√≠vel, segue o padr√£o de arquitetura Flux. Nos √∫ltimos tempos acabou perdendo um pouco de for√ßa por conta da poderosa combina√ß√£o de hooks useContext e
            useReducer do React.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano e 4 meses</ExperienceText>
        </>
      );

      break;
    }
    case "next": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Next</TechnologyInfoTitle>
          <TechnologyInfoText>
            Next √© um framework para o React, foi desenvolvido com o intuito de facilitar e melhorar funcionalidades j√° existentes, lidar com rotas √© mais simples, tem suporte a renderiza√ß√£o do lado do servidor e pr√© renderiza√ß√£o est√°tica.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Foi desenvolvida em apenas 10 dias, levou "Java" em seu nome para
            surfar no hype da √©poca, pode ser utilizada para desenvolver de
            sites, APIs, aplicativos m√≥veis, aplica√ß√µes desktop, machine
            learning, internet das coisas, etc.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano</ExperienceText>
        </>
      );

      break;
    }
    case "node": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Node</TechnologyInfoTitle>
          <TechnologyInfoText>
            Diferente do que muitos pensam, Node n√£o √© uma linguagem e sim um ambiente de execu√ß√£o, isso nos permite executar JavaScript at√© mesmo em uma geladeira inteligente. √â baseado em eventos, permitindo que diferentes requisi√ß√µes possam ser processadas simultaneamente.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Com ele, surgiu o NPM (Node Package Manager), utilizado para lidar com bibliotecas de terceiros nos projetos. Geralmente √© utilizado para desenvolvimento de APIs, aplica√ß√µes em tempo real, bibliotecas SPA (como React), etc.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano</ExperienceText>
        </>
      );

      break;
    }
    case "express": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Express</TechnologyInfoTitle>
          <TechnologyInfoText>
            Um framework para o Node, projetado para facilitar o desenvolvimento de APIs na web. √â simples de configurar e tem uma sintaxe muito amig√°vel.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Essencial para cria√ß√£o de APIs Restful e obrigat√≥rio para qualquer desenvolvedor web, tem uma estrutura leve e poderosa auxiliando a lidar com rotas, middlewares e manipulac√µes de diferentes tipos de requisi√ß√£o.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano</ExperienceText>
        </>
      );

      break;
    }
    case "java": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Java</TechnologyInfoTitle>
          <TechnologyInfoText>
            Uma linguagem de programa√ß√£o com tipagem forte e orientada a objeto, Java foi lan√ßado com o intuito de rodar em qualquer tipo de eletr√¥nico (qualquer mesmo), bastando ter uma m√°quina virtual que fosse capaz de compilar seu c√≥digo.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Ganhou grande popularidade por conta de sua portabilidade e seguran√ßa, ainda √© muito utilizada para projetos robustos e mobile. Al√©m da possibilidade de desenvolver APIs para web com o framework Spring Boot.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano e 4 meses</ExperienceText>
        </>
      );

      break;
    }
    case "android": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Android</TechnologyInfoTitle>
          <TechnologyInfoText>
            Surgiu com a premissa de desenvolver sistemas operacionais para c√¢meras, mas viu uma grande oportunidade com o surgimento dos smartphones, ap√≥s ser adquirido pela Google, foi codado o sistema que todos conhecem hoje.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Sua principal linguagem de programa√ß√£o √© o Java, tornando um sistema bem robusto, por√©m, a mesma vem sendo substitu√≠da pelo Kotlin, linguagem de uso mais din√¢mico.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 8 meses</ExperienceText>
        </>
      );

      break;
    }
    case "database": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Banco de Dados</TechnologyInfoTitle>
          <TechnologyInfoText>
            Os bancos de dados surgiram com uma necessidade de armazenar dados de contextos variados. Atualmente s√£o indispens√°veis em qualquer √°rea, contendo todas as informa√ß√µes necess√°rias para uma aplica√ß√£o rodar.
          </TechnologyInfoText>
          <TechnologyInfoText>
            Os bancos de dados mais utilizados atualmente s√£o os relacionais (que organiza os dados a partir de tabelas, linhas e colunas) e os n√£o relacionais, que surgiram com a necessidade de dados n√£o estruturados e escalabilidade horizontal, o relacional acaba sendo mais engessado e o n√£o relacional mais flex√≠vel.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 1 ano e 4 meses</ExperienceText>
        </>
      );

      break;
    }
    case "git": {
      technologyText = (
        <>
          <TechnologyInfoTitle>Git</TechnologyInfoTitle>
          <TechnologyInfoText>
            Um sistema de gerenciamento de vers√µes, permitindo com que v√°rios desenvolvedores trabalhem em um projeto simultaneamente. √â eficiente, simples e permite o desenvolvimento local.
          </TechnologyInfoText>
          <TechnologyInfoText>
            O Git permite que o projeto tenha uma vers√£o remota e uma c√≥pia local no pc dos devs, as altera√ß√µes feitas localmente podem ser transferidas para o remoto com alguns simples comando.
          </TechnologyInfoText>
          <ExperienceText>Tempo de experi√™ncia: 2 anos</ExperienceText>
        </>
      );

      break;
    }
    default: {
      technologyText = <TechnologyInfoSpan>{tecnologyInfo}</TechnologyInfoSpan>;
    }
  }

  return (
    <SectionContainer>
      <AboutContainer>
        <StyledTitle>Minha hist√≥ria</StyledTitle>
        <TextAndImageContainer>
          <TextContainer>
            <StyledText>
              Entrei na empresa Lupo S/A aos 18 anos para trabalhar como menor
              aprendiz de auxiliar administrativo! Fui efetivado ap√≥s seis meses
              e segui desenvolvendo minhas habilidades, ent√£o, a pandemia chegou
              com tudo.
            </StyledText>
            <StyledSkillsText>
              Soft Skills: Pensamento cr√≠tico, resolu√ß√£o de problemas e
              atendimento aos representantes
            </StyledSkillsText>
            <StyledSkillsText>Hard Skills: SAP, Excel e Word</StyledSkillsText>
          </TextContainer>
          <StyledImage>
            <Image
              src="/office.jpg"
              alt="escrit√≥rio"
              fill={true}
              sizes=""
              style={{ borderRadius: 12 }}
              quality={100}
            />
            <IconsContainer>
              <Image src="/sap.svg" width={50} height={50} alt="icon" />
              <Image src="/excel.svg" width={50} height={50} alt="icon" />
              <Image src="/word.svg" width={50} height={50} alt="icon" />
            </IconsContainer>
          </StyledImage>
        </TextAndImageContainer>
        <TextAndImageContainer>
          <StyledImage>
            <Image
              src="/league-of-legends.png"
              alt="escrit√≥rio"
              fill={true}
              sizes=""
              style={{ borderRadius: 12 }}
              quality={100}
            />
            <IconsContainer>
              <Image
                src="/league-of-legends.svg"
                width={50}
                height={50}
                alt="icon"
              />
              <Image src="/joystick.svg" width={50} height={50} alt="icon" />
              <Image src="/medal.svg" width={50} height={50} alt="icon" />
            </IconsContainer>
          </StyledImage>
          <TextContainer>
            <StyledText>
              Depois de algum tempo em casa jogando, alcancei uma das posi√ß√µes
              mais altas no jogo League of Legends e optei por investir meu
              tempo em me tornar um jogador profissional. Mas n√£o aconteceu como
              eu esperava...
            </StyledText>
            <StyledSkillsText>
              Soft Skills: Comunica√ß√£o assertiva e tomada r√°pida de decis√£o
            </StyledSkillsText>
            <StyledSkillsText>
              Hard Skills: Gest√£o de recursos e mec√¢nica
            </StyledSkillsText>
          </TextContainer>
        </TextAndImageContainer>
        <TextAndImageContainer>
          <TextContainer>
            <StyledText>
              Ap√≥s um ano tentando, decidi seguir outro caminho. A programa√ß√£o
              sempre esteve comigo, eu apenas n√£o enxergava. Logo comecei a me
              dedicar aos estudos, tive um grande apoio de amigos que j√° eram da
              √°rea.
            </StyledText>
            <StyledSkillsText>
              Soft Skills: Criatividade, adaptabilidade e melhoria nas skills
              anteriores
            </StyledSkillsText>
            <StyledSkillsText>Hard Skills: Voc√™ vai ver j√° üòÑ</StyledSkillsText>
          </TextContainer>
          <StyledImage>
            <Image
              src="/programming.webp"
              alt="escrit√≥rio"
              fill={true}
              sizes=""
              style={{ borderRadius: 12 }}
              quality={100}
            />
            <IconsContainer>
              <Image src="/cpu.svg" width={50} height={50} alt="icon" />
              <Image src="/monitor.svg" width={50} height={50} alt="icon" />
              <Image src="/code.svg" width={50} height={50} alt="icon" />
            </IconsContainer>
          </StyledImage>
        </TextAndImageContainer>

        <StyledMiddleText>
          Ap√≥s muita dedica√ß√£o, consegui um emprego como desenvolvedor full
          stack e hoje, posso dizer que sou proficiente em todas as seguintes
          tecnologias:
        </StyledMiddleText>

        <Technologies>
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("html")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/html.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("css")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/css.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("sass")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/sass.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("tailwind")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/tailwind.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("styled")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/styled.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("javascript")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/javascript.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("typescript")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/typescript.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("react")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/react.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("redux")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/redux.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("next")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/next.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("node")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/node.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("express")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/express.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("java")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/java.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("android")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/android.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("database")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/database.svg"
            width={80}
            height={80}
            alt="icon"
          />
          <StyledTechnologyImage
            onMouseEnter={() => setCurrentSkill("git")}
            onMouseLeave={() => setCurrentSkill("")}
            src="/git.svg"
            width={80}
            height={80}
            alt="icon"
          />
        </Technologies>

        <TechnologyInfoContainer>{technologyText}</TechnologyInfoContainer>
      </AboutContainer>
    </SectionContainer>
  );
}
